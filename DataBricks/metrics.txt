from sklearn.metrics import roc_auc_score

y_true = [0, 0, 1, 1]  
y_pred = [0.1, 0.3, 0.8, 0.9]   

auc = roc_auc_score(y_true, y_pred) 
print("AUC:", auc)  

from sklearn.metrics import confusion_matrix

y_true = [1, 0, 1, 1, 0]
y_pred = [0, 1, 1, 1, 0]  

conf_mat = confusion_matrix(y_true, y_pred)
print(conf_mat)

# underfit model
import numpy as np
from sklearn.linear_model import LinearRegression
import matplotlib.pyplot as plt

# Non-linear data  
X = np.array([[1], [2], [3], [4], [5]])
y = np.array([1, 3, 2, 3, 5])  

# Fitting simple linear model
model = LinearRegression()
model.fit(X, y)

# Plot data and model  
plt.plot(X, y, '.')  
plt.plot(X, model.predict(X), 'r-')  

plt.title("Underfit model")
plt.show()

# overfit model
from sklearn.preprocessing import PolynomialFeatures
from sklearn.pipeline import make_pipeline
from sklearn.linear_model import LinearRegression
import matplotlib.pyplot as plt

X = [[1], [2], [3], [4], [5]]
y = [1, 3, 2, 3, 5]

model = make_pipeline(PolynomialFeatures(7), LinearRegression()) 
model.fit(X, y)

plt.plot(X, y, '.')
plt.plot(X, model.predict(X), 'r-') 

plt.title("Overfit model")  
plt.show()